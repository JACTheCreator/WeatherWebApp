(function () {
  'use strict';
  angular.module('intranet', [
    'ngRoute',
    'ngMessages',
    'apps.casemgr'
  ]).config(config).run(updateTitle);
  function config($routeProvider, $httpProvider) {
    $routeProvider.otherwise({ redirectTo: '/dashboard/apps/casemgr/acquisition' });
  }
  function updateTitle($rootScope) {
    $rootScope.$on('$routeChangeSuccess', function (event, currentRoute, previousRoute) {
      $rootScope.title = currentRoute.title;
    });
  }
}());
(function () {
  'use strict';
  angular.module('apps.casemgr', []).config(config);
  function config($routeProvider) {
    $routeProvider.when('/dashboard/apps/casemgr/acquisition', {
      templateUrl: 'templates/casemgr/list.html',
      controller: 'list',
      controllerAs: 'vm',
      title: 'Acquisition List'
    }).when('/dashboard/apps/casemgr/acquisition/create', {
      templateUrl: 'templates/casemgr/create.html',
      controller: 'create',
      controllerAs: 'vm',
      title: 'Create Acquisition'
    }).when('/dashboard/apps/casemgr/acquisition/edit/:id', {
      templateUrl: 'templates/casemgr/details.html',
      controller: 'edit',
      controllerAs: 'vm',
      title: 'Acquisition Details'
    });
  }
}());
(function () {
  'use strict';
  angular.module('apps.casemgr').controller('create', create);
  create.$inject = [
    'casemgrSrv',
    '$q',
    '$window',
    '$routeParams'
  ];
  function create(casemgrSrv, $q, $window, $routeParams) {
    var vm = this;
    vm.parishes = [];
    vm.post = post;
    activate();
    /**
     * [activate description]
     * @return {[type]} [description]
     */
    function activate() {
      getParishes();
    }
    function getParishes() {
      casemgrSrv.getParishes().then(function (parishes) {
        vm.parishes = parishes;
      }).catch(function (error) {
        vm.parishes = [];
      });
    }
    /**
     * [postAcquisitions description]
     * @return {[type]} [description]
     */
    function postAcquisitions() {
      casemgrSrv.createAcquisition(vm.data).then(function (res) {
        if (res.data) {
          vm.showSuccess = true;
          vm.showError = false;
          vm.data = [];
        }
      }).catch(function (error) {
        vm.showSuccess = false;
        vm.showError = true;
      });
    }
    /**
     * [post description]
     * @return {[type]} [description]
     */
    function post() {
      postAcquisitions();
      $window.scrollTo(0, 0);
    }
    /**
     * [reset description]
     * @return {[type]} [description]
     */
    function reset() {
    }
  }
}());
(function () {
  'use strict';
  angular.module('apps.casemgr').controller('edit', edit);
  edit.$inject = [
    'casemgrSrv',
    '$routeParams'
  ];
  function edit(casemgrSrv, $routeParams) {
    var vm = this;
    vm.openModal = openModal;
    vm.closeModal = closeModal;
    activate();
    /**
     * [activate description]
     * @return {[type]} [description]
     */
    function activate() {
      getById($routeParams.id);
    }
    /**
     * [getById description]
     * @param  {[type]} id [description]
     * @return {[type]}    [description]
     */
    function getById(id) {
      casemgrSrv.getAcquisitionById(id).then(function (data) {
        vm.data = data;
      }).catch(function (error) {
        vm.data = [];
      });
    }
    function openModal(fieldName, fieldValue) {
      vm.showModal = 'is-active';
      vm.fieldValue = fieldValue;
      vm.fieldName = fieldName;
    }
    function closeModal() {
      vm.showModal = '';
      vm.fieldValue = '';
      vm.fieldName = '';
    }
  }
}());
(function () {
  'use strict';
  angular.module('apps.casemgr').controller('list', list);
  list.$inject = [
    'casemgrSrv',
    '$location',
    '$routeParams'
  ];
  function list(casemgrSrv, $location, $routeParams) {
    var vm = this;
    vm.acquisitions = [];
    vm.show = show;
    activate();
    /**
     * [activate description]
     * @return {[type]} [description]
     */
    function activate() {
      getAcquisitions();
    }
    /**
     * getAcquisitions get acquisitions
     */
    function getAcquisitions() {
      casemgrSrv.getAcquisitions().then(function (acquisitions) {
        vm.acquisitions = acquisitions;
      }).catch(function (error) {
        vm.acquisitions = [];
      });
    }
    function show(id) {
      $location.path('/dashboard/apps/casemgr/acquisition/edit/' + id);
    }
  }
}());
(function () {
  'use strict';
  angular.module('apps.casemgr').service('casemgrSrv', casemgrSrv);
  casemgrSrv.$inject = [
    '$http',
    '$routeParams'
  ];
  function casemgrSrv($http) {
    var services = {
        getAcquisitions: getAcquisitions,
        getParishes: getParishes,
        createAcquisition: createAcquisition,
        getAcquisitionById: getAcquisitionById
      };
    /**
         * getAcquisitions gets the acquisitions from database if possible else returns error message
         * @return Object returns the acquisitions from database if possible else returns error message
         */
    function getAcquisitions() {
      return $http.get('api/acquisitions').then(handleSuccess).catch(handleError);
    }
    /**
         * [getParish description]
         * @return {[type]} [description]
         */
    function getParishes() {
      return $http.get('api/parishes').then(handleSuccess).then(handleError);
    }
    /**
         * [getAcquisitionById description]
         * @param  {[type]} id [description]
         * @return {[type]}    [description]
         */
    function getAcquisitionById(id) {
      return $http.get('api/acquisitions/' + id).then(handleSuccess).catch(handleError);
    }
    /**
         * [createAcquisition description]
         * @param  {[type]} data [description]
         * @return {[type]}      [description]
         */
    function createAcquisition(data) {
      return $http.post('api/acquisitions', data);
    }
    /**
         * handleSuccess retrieves data from the database if there is no error
         * @param  Object res the data that is retrieved from the database
         * @return Object the data from a database
         */
    function handleSuccess(res) {
      return res.data;
    }
    /**
         * handleError returns an error message if there is a problem retrieving data from the database
         * @param  Object res [description]
         * @return Object     error message
         */
    function handleError(res) {
      return res;
    }
    return services;
  }
}());